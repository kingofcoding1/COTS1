
BL_SER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000006ca  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000006ca  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 000000e0  00000000  00000000  000006f9  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  000007d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e81  00000000  00000000  00000871  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d9  00000000  00000000  000016f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c0  00000000  00000000  00001dcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000124  00000000  00000000  0000218c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b9  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000115  00000000  00000000  00002469  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0000257e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000628  00000628  000006bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000025e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.fun     00000038  00000508  00000508  0000059c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    0000002c  00000540  00000540  000005d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.TIMER1_Init 0000004c  00000478  00000478  0000050c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.SET_OCR 00000006  0000061c  0000061c  000006b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_11 00000072  000003a8  000003a8  0000043c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.counter.1602 00000002  00800060  00800060  000006ca  2**0
                  ALLOC
 20 .bss.gptr     00000002  00800062  00800062  000006ca  2**0
                  ALLOC
 21 .text.UART_Recieve 00000008  00000604  00000604  00000698  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.UART_INIT 0000001c  0000058e  0000058e  00000622  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text         0000000e  000005c0  000005c0  00000654  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text         000000ce  00000260  00000260  000002f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text         00000008  0000060c  0000060c  000006a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text         000000de  000000ae  000000ae  00000142  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text         0000005e  0000041a  0000041a  000004ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text         0000007a  0000032e  0000032e  000003c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text         0000000c  000005f8  000005f8  0000068c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text         00000006  00000622  00000622  000006b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text         0000000e  000005ce  000005ce  00000662  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text         0000000e  000005dc  000005dc  00000670  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text         00000022  0000056c  0000056c  00000600  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text         00000044  000004c4  000004c4  00000558  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text         0000000e  000005ea  000005ea  0000067e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text         00000008  00000614  00000614  000006a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text         000000d4  0000018c  0000018c  00000220  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.__dummy_fini 00000002  00000630  00000630  000006c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.__dummy_funcs_on_exit 00000002  00000632  00000632  000006c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.__dummy_simulator_exit 00000002  00000634  00000634  000006c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.exit    00000016  000005aa  000005aa  0000063e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text._Exit   00000004  0000062c  0000062c  000006c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2d 00 	jmp	0x5a	; 0x5a <__ctors_end>
   4:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
   8:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
   c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  10:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  14:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  18:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  1c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  20:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  24:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  28:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  2c:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__vector_11>
  30:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  34:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  38:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  3c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  40:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  44:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  48:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  4c:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>
  50:	0c 94 14 03 	jmp	0x628	; 0x628 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 64       	ori	r16, 0x40	; 64
  58:	80 00       	.word	0x0080	; ????

0000005a <__ctors_end>:
  5a:	11 24       	eor	r1, r1
  5c:	1f be       	out	0x3f, r1	; 63
  5e:	cf e5       	ldi	r28, 0x5F	; 95
  60:	d8 e0       	ldi	r29, 0x08	; 8
  62:	de bf       	out	0x3e, r29	; 62
  64:	cd bf       	out	0x3d, r28	; 61

00000066 <__do_copy_data>:
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	40 e0       	ldi	r20, 0x00	; 0
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__do_clear_bss+0x8>
  6e:	b5 91       	lpm	r27, Z+
  70:	a5 91       	lpm	r26, Z+
  72:	35 91       	lpm	r19, Z+
  74:	25 91       	lpm	r18, Z+
  76:	05 91       	lpm	r16, Z+
  78:	07 fd       	sbrc	r16, 7
  7a:	0c c0       	rjmp	.+24     	; 0x94 <__do_clear_bss>
  7c:	95 91       	lpm	r25, Z+
  7e:	85 91       	lpm	r24, Z+
  80:	ef 01       	movw	r28, r30
  82:	f9 2f       	mov	r31, r25
  84:	e8 2f       	mov	r30, r24
  86:	05 90       	lpm	r0, Z+
  88:	0d 92       	st	X+, r0
  8a:	a2 17       	cp	r26, r18
  8c:	b3 07       	cpc	r27, r19
  8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0x20>
  90:	fe 01       	movw	r30, r28
  92:	04 c0       	rjmp	.+8      	; 0x9c <__do_clear_bss+0x8>

00000094 <__do_clear_bss>:
  94:	1d 92       	st	X+, r1
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	e1 f7       	brne	.-8      	; 0x94 <__do_clear_bss>
  9c:	e9 35       	cpi	r30, 0x59	; 89
  9e:	f4 07       	cpc	r31, r20
  a0:	31 f7       	brne	.-52     	; 0x6e <__do_copy_data+0x8>
  a2:	0e 94 a0 02 	call	0x540	; 0x540 <main>
  a6:	0c 94 d5 02 	jmp	0x5aa	; 0x5aa <exit>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>

Disassembly of section .text:

00000628 <__bad_interrupt>:
 628:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.fun:

00000508 <fun>:

}

u16 fun(u8 angle)
{
	return (((((f32)angle / 180)+1))*1000);
 508:	68 2f       	mov	r22, r24
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 97 01 	call	0x32e	; 0x32e <__floatunsisf>
 514:	20 e0       	ldi	r18, 0x00	; 0
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	44 e3       	ldi	r20, 0x34	; 52
 51a:	53 e4       	ldi	r21, 0x43	; 67
 51c:	0e 94 06 03 	call	0x60c	; 0x60c <__divsf3>
 520:	20 e0       	ldi	r18, 0x00	; 0
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	40 e8       	ldi	r20, 0x80	; 128
 526:	5f e3       	ldi	r21, 0x3F	; 63
 528:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__addsf3>
 52c:	20 e0       	ldi	r18, 0x00	; 0
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	4a e7       	ldi	r20, 0x7A	; 122
 532:	54 e4       	ldi	r21, 0x44	; 68
 534:	0e 94 0a 03 	call	0x614	; 0x614 <__mulsf3>
 538:	0e 94 0d 02 	call	0x41a	; 0x41a <__fixunssfsi>
 53c:	cb 01       	movw	r24, r22
 53e:	08 95       	ret

Disassembly of section .text.main:

00000540 <main>:
u16 fun(u8 angle);


int main(void)
{
    	TIMER1_Init();
 540:	0e 94 3c 02 	call	0x478	; 0x478 <TIMER1_Init>
        UART_INIT();
 544:	0e 94 c7 02 	call	0x58e	; 0x58e <UART_INIT>
       u8 Rec_data = 0;
   
	while(1)
    {
		Rec_data = UART_Recieve();
 548:	0e 94 02 03 	call	0x604	; 0x604 <UART_Recieve>
 54c:	c8 2f       	mov	r28, r24
		if (Rec_data == 1)
 54e:	81 30       	cpi	r24, 0x01	; 1
 550:	29 f4       	brne	.+10     	; 0x55c <main+0x1c>
		{
          SET_OCR(fun(180));
 552:	84 eb       	ldi	r24, 0xB4	; 180
 554:	0e 94 84 02 	call	0x508	; 0x508 <fun>
 558:	0e 94 0e 03 	call	0x61c	; 0x61c <SET_OCR>
		}
	   	if (Rec_data == 2)
 55c:	c2 30       	cpi	r28, 0x02	; 2
 55e:	a1 f7       	brne	.-24     	; 0x548 <main+0x8>
	  		{
          SET_OCR(fun(0));
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	0e 94 84 02 	call	0x508	; 0x508 <fun>
 566:	0e 94 0e 03 	call	0x61c	; 0x61c <SET_OCR>
 56a:	ee cf       	rjmp	.-36     	; 0x548 <main+0x8>

Disassembly of section .text.TIMER1_Init:

00000478 <TIMER1_Init>:
	Description : 
	This fun is used to Initialize Timer1 in Fast PWM & Phase correct
	*/
	// Choosing ICR Value 
	// ICR is special Reg in Timer1 That allows you to chose your freq
	TIMER1_ICR = NO_ICR ;
 478:	80 e4       	ldi	r24, 0x40	; 64
 47a:	9c e9       	ldi	r25, 0x9C	; 156
 47c:	97 bd       	out	0x27, r25	; 39
 47e:	86 bd       	out	0x26, r24	; 38
	// OCR_value to take acton At 
	
	#if Timer1_Mode == FAST_PWM
	
	// Wave Form Generatio mode
	SET_BIT(TIMER1_TCCR1B,4);
 480:	8e b5       	in	r24, 0x2e	; 46
 482:	80 61       	ori	r24, 0x10	; 16
 484:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TIMER1_TCCR1B,3);
 486:	8e b5       	in	r24, 0x2e	; 46
 488:	88 60       	ori	r24, 0x08	; 8
 48a:	8e bd       	out	0x2e, r24	; 46
    SET_BIT(TIMER1_TCCR1A,1);
 48c:	8f b5       	in	r24, 0x2f	; 47
 48e:	82 60       	ori	r24, 0x02	; 2
 490:	8f bd       	out	0x2f, r24	; 47
    CLEAR_BIT(TIMER1_TCCR1A,0);
 492:	8f b5       	in	r24, 0x2f	; 47
 494:	8e 7f       	andi	r24, 0xFE	; 254
 496:	8f bd       	out	0x2f, r24	; 47
    // NON-inverting mode 
    CLEAR_BIT(TIMER1_TCCR1A,4);
 498:	8f b5       	in	r24, 0x2f	; 47
 49a:	8f 7e       	andi	r24, 0xEF	; 239
 49c:	8f bd       	out	0x2f, r24	; 47
    CLEAR_BIT(TIMER1_TCCR1A,6);
 49e:	8f b5       	in	r24, 0x2f	; 47
 4a0:	8f 7b       	andi	r24, 0xBF	; 191
 4a2:	8f bd       	out	0x2f, r24	; 47
    
   SET_BIT(TIMER1_TCCR1A,5);
 4a4:	8f b5       	in	r24, 0x2f	; 47
 4a6:	80 62       	ori	r24, 0x20	; 32
 4a8:	8f bd       	out	0x2f, r24	; 47
   SET_BIT(TIMER1_TCCR1A,7);
 4aa:	8f b5       	in	r24, 0x2f	; 47
 4ac:	80 68       	ori	r24, 0x80	; 128
 4ae:	8f bd       	out	0x2f, r24	; 47
	#endif

////prescaler8
	
	CLEAR_BIT(TIMER1_TCCR1B,0);
 4b0:	8e b5       	in	r24, 0x2e	; 46
 4b2:	8e 7f       	andi	r24, 0xFE	; 254
 4b4:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TIMER1_TCCR1B,1);
 4b6:	8e b5       	in	r24, 0x2e	; 46
 4b8:	82 60       	ori	r24, 0x02	; 2
 4ba:	8e bd       	out	0x2e, r24	; 46
	CLEAR_BIT(TIMER1_TCCR1B,2);
 4bc:	8e b5       	in	r24, 0x2e	; 46
 4be:	8b 7f       	andi	r24, 0xFB	; 251
 4c0:	8e bd       	out	0x2e, r24	; 46
 4c2:	08 95       	ret

Disassembly of section .text.SET_OCR:

0000061c <SET_OCR>:

}


void SET_OCR(u16 value){
		TIMER1_OCR1A = value ;
 61c:	9b bd       	out	0x2b, r25	; 43
 61e:	8a bd       	out	0x2a, r24	; 42
 620:	08 95       	ret

Disassembly of section .text.__vector_11:

000003a8 <__vector_11>:

	
	// Prescaler 8
	CLEAR_BIT(TIMER0_TCCR0,0);
	SET_BIT(TIMER0_TCCR0,1)  ; 
	CLEAR_BIT(TIMER0_TCCR0,2);
 3a8:	1f 92       	push	r1
 3aa:	0f 92       	push	r0
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	0f 92       	push	r0
 3b0:	11 24       	eor	r1, r1
 3b2:	2f 93       	push	r18
 3b4:	3f 93       	push	r19
 3b6:	4f 93       	push	r20
 3b8:	5f 93       	push	r21
 3ba:	6f 93       	push	r22
 3bc:	7f 93       	push	r23
 3be:	8f 93       	push	r24
 3c0:	9f 93       	push	r25
 3c2:	af 93       	push	r26
 3c4:	bf 93       	push	r27
 3c6:	ef 93       	push	r30
 3c8:	ff 93       	push	r31
 3ca:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 3ce:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3d2:	01 96       	adiw	r24, 0x01	; 1
 3d4:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3d8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 3dc:	80 32       	cpi	r24, 0x20	; 32
 3de:	9e 44       	sbci	r25, 0x4E	; 78
 3e0:	59 f4       	brne	.+22     	; 0x3f8 <__vector_11+0x50>
 3e2:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <gptr>
 3e6:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <gptr+0x1>
 3ea:	09 95       	icall
 3ec:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3f0:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 3f4:	88 ed       	ldi	r24, 0xD8	; 216
 3f6:	82 bf       	out	0x32, r24	; 50
 3f8:	ff 91       	pop	r31
 3fa:	ef 91       	pop	r30
 3fc:	bf 91       	pop	r27
 3fe:	af 91       	pop	r26
 400:	9f 91       	pop	r25
 402:	8f 91       	pop	r24
 404:	7f 91       	pop	r23
 406:	6f 91       	pop	r22
 408:	5f 91       	pop	r21
 40a:	4f 91       	pop	r20
 40c:	3f 91       	pop	r19
 40e:	2f 91       	pop	r18
 410:	0f 90       	pop	r0
 412:	0f be       	out	0x3f, r0	; 63
 414:	0f 90       	pop	r0
 416:	1f 90       	pop	r1
 418:	18 95       	reti

Disassembly of section .text.UART_Recieve:

00000604 <UART_Recieve>:
}

u8 UART_Recieve(void)
{
	
	while(GET_BIT(UART_UCSRA,7)==0);	
 604:	5f 9b       	sbis	0x0b, 7	; 11
 606:	fe cf       	rjmp	.-4      	; 0x604 <UART_Recieve>
	return UART_UDR;
 608:	8c b1       	in	r24, 0x0c	; 12
	

}
 60a:	08 95       	ret

Disassembly of section .text.UART_INIT:

0000058e <UART_INIT>:

void UART_Transmit(u8 Data)
{
	
while(GET_BIT(UART_UCSRA,5)==0);	
UART_UDR = Data;
 58e:	8a b1       	in	r24, 0x0a	; 10
 590:	8b 7f       	andi	r24, 0xFB	; 251
 592:	8a b9       	out	0x0a, r24	; 10
 594:	83 e8       	ldi	r24, 0x83	; 131
 596:	80 bd       	out	0x20, r24	; 32
 598:	8a b1       	in	r24, 0x0a	; 10
 59a:	88 60       	ori	r24, 0x08	; 8
 59c:	8a b9       	out	0x0a, r24	; 10
 59e:	8a b1       	in	r24, 0x0a	; 10
 5a0:	80 61       	ori	r24, 0x10	; 16
 5a2:	8a b9       	out	0x0a, r24	; 10
 5a4:	87 e6       	ldi	r24, 0x67	; 103
 5a6:	89 b9       	out	0x09, r24	; 9
 5a8:	08 95       	ret

Disassembly of section .text:

000005c0 <__subsf3>:
 5c0:	50 58       	subi	r21, 0x80	; 128

000005c2 <__addsf3>:
 5c2:	bb 27       	eor	r27, r27
 5c4:	aa 27       	eor	r26, r26
 5c6:	0e 94 30 01 	call	0x260	; 0x260 <__addsf3x>
 5ca:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_round>

Disassembly of section .text:

00000260 <__addsf3x>:
 260:	11 c0       	rjmp	.+34     	; 0x284 <__addsf3x+0x24>
 262:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscA>
 266:	38 f0       	brcs	.+14     	; 0x276 <__addsf3x+0x16>
 268:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscB>
 26c:	20 f0       	brcs	.+8      	; 0x276 <__addsf3x+0x16>
 26e:	39 f4       	brne	.+14     	; 0x27e <__addsf3x+0x1e>
 270:	9f 3f       	cpi	r25, 0xFF	; 255
 272:	19 f4       	brne	.+6      	; 0x27a <__addsf3x+0x1a>
 274:	26 f4       	brtc	.+8      	; 0x27e <__addsf3x+0x1e>
 276:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_nan>
 27a:	0e f4       	brtc	.+2      	; 0x27e <__addsf3x+0x1e>
 27c:	e0 95       	com	r30
 27e:	e7 fb       	bst	r30, 7
 280:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_inf>
 284:	e9 2f       	mov	r30, r25
 286:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fp_split3>
 28a:	58 f3       	brcs	.-42     	; 0x262 <__addsf3x+0x2>
 28c:	ba 17       	cp	r27, r26
 28e:	62 07       	cpc	r22, r18
 290:	73 07       	cpc	r23, r19
 292:	84 07       	cpc	r24, r20
 294:	95 07       	cpc	r25, r21
 296:	20 f0       	brcs	.+8      	; 0x2a0 <__addsf3x+0x40>
 298:	79 f4       	brne	.+30     	; 0x2b8 <__addsf3x+0x58>
 29a:	a6 f5       	brtc	.+104    	; 0x304 <__addsf3x+0xa4>
 29c:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_zero>
 2a0:	0e f4       	brtc	.+2      	; 0x2a4 <__addsf3x+0x44>
 2a2:	e0 95       	com	r30
 2a4:	0b 2e       	mov	r0, r27
 2a6:	ba 2f       	mov	r27, r26
 2a8:	a0 2d       	mov	r26, r0
 2aa:	0b 01       	movw	r0, r22
 2ac:	b9 01       	movw	r22, r18
 2ae:	90 01       	movw	r18, r0
 2b0:	0c 01       	movw	r0, r24
 2b2:	ca 01       	movw	r24, r20
 2b4:	a0 01       	movw	r20, r0
 2b6:	11 24       	eor	r1, r1
 2b8:	ff 27       	eor	r31, r31
 2ba:	59 1b       	sub	r21, r25
 2bc:	99 f0       	breq	.+38     	; 0x2e4 <__addsf3x+0x84>
 2be:	59 3f       	cpi	r21, 0xF9	; 249
 2c0:	50 f4       	brcc	.+20     	; 0x2d6 <__addsf3x+0x76>
 2c2:	50 3e       	cpi	r21, 0xE0	; 224
 2c4:	68 f1       	brcs	.+90     	; 0x320 <__addsf3x+0xc0>
 2c6:	1a 16       	cp	r1, r26
 2c8:	f0 40       	sbci	r31, 0x00	; 0
 2ca:	a2 2f       	mov	r26, r18
 2cc:	23 2f       	mov	r18, r19
 2ce:	34 2f       	mov	r19, r20
 2d0:	44 27       	eor	r20, r20
 2d2:	58 5f       	subi	r21, 0xF8	; 248
 2d4:	f3 cf       	rjmp	.-26     	; 0x2bc <__addsf3x+0x5c>
 2d6:	46 95       	lsr	r20
 2d8:	37 95       	ror	r19
 2da:	27 95       	ror	r18
 2dc:	a7 95       	ror	r26
 2de:	f0 40       	sbci	r31, 0x00	; 0
 2e0:	53 95       	inc	r21
 2e2:	c9 f7       	brne	.-14     	; 0x2d6 <__addsf3x+0x76>
 2e4:	7e f4       	brtc	.+30     	; 0x304 <__addsf3x+0xa4>
 2e6:	1f 16       	cp	r1, r31
 2e8:	ba 0b       	sbc	r27, r26
 2ea:	62 0b       	sbc	r22, r18
 2ec:	73 0b       	sbc	r23, r19
 2ee:	84 0b       	sbc	r24, r20
 2f0:	ba f0       	brmi	.+46     	; 0x320 <__addsf3x+0xc0>
 2f2:	91 50       	subi	r25, 0x01	; 1
 2f4:	a1 f0       	breq	.+40     	; 0x31e <__addsf3x+0xbe>
 2f6:	ff 0f       	add	r31, r31
 2f8:	bb 1f       	adc	r27, r27
 2fa:	66 1f       	adc	r22, r22
 2fc:	77 1f       	adc	r23, r23
 2fe:	88 1f       	adc	r24, r24
 300:	c2 f7       	brpl	.-16     	; 0x2f2 <__addsf3x+0x92>
 302:	0e c0       	rjmp	.+28     	; 0x320 <__addsf3x+0xc0>
 304:	ba 0f       	add	r27, r26
 306:	62 1f       	adc	r22, r18
 308:	73 1f       	adc	r23, r19
 30a:	84 1f       	adc	r24, r20
 30c:	48 f4       	brcc	.+18     	; 0x320 <__addsf3x+0xc0>
 30e:	87 95       	ror	r24
 310:	77 95       	ror	r23
 312:	67 95       	ror	r22
 314:	b7 95       	ror	r27
 316:	f7 95       	ror	r31
 318:	9e 3f       	cpi	r25, 0xFE	; 254
 31a:	08 f0       	brcs	.+2      	; 0x31e <__addsf3x+0xbe>
 31c:	b0 cf       	rjmp	.-160    	; 0x27e <__addsf3x+0x1e>
 31e:	93 95       	inc	r25
 320:	88 0f       	add	r24, r24
 322:	08 f0       	brcs	.+2      	; 0x326 <__addsf3x+0xc6>
 324:	99 27       	eor	r25, r25
 326:	ee 0f       	add	r30, r30
 328:	97 95       	ror	r25
 32a:	87 95       	ror	r24
 32c:	08 95       	ret

Disassembly of section .text:

0000060c <__divsf3>:
 60c:	0e 94 57 00 	call	0xae	; 0xae <__data_load_end>
 610:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_round>

Disassembly of section .text:

000000ae <__divsf3x>:
  ae:	10 c0       	rjmp	.+32     	; 0xd0 <__divsf3x+0x22>
  b0:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscB>
  b4:	58 f0       	brcs	.+22     	; 0xcc <__divsf3x+0x1e>
  b6:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscA>
  ba:	40 f0       	brcs	.+16     	; 0xcc <__divsf3x+0x1e>
  bc:	29 f4       	brne	.+10     	; 0xc8 <__divsf3x+0x1a>
  be:	5f 3f       	cpi	r21, 0xFF	; 255
  c0:	29 f0       	breq	.+10     	; 0xcc <__divsf3x+0x1e>
  c2:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_inf>
  c6:	51 11       	cpse	r21, r1
  c8:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_szero>
  cc:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_nan>
  d0:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fp_split3>
  d4:	68 f3       	brcs	.-38     	; 0xb0 <__divsf3x+0x2>

000000d6 <__divsf3_pse>:
  d6:	99 23       	and	r25, r25
  d8:	b1 f3       	breq	.-20     	; 0xc6 <__divsf3x+0x18>
  da:	55 23       	and	r21, r21
  dc:	91 f3       	breq	.-28     	; 0xc2 <__divsf3x+0x14>
  de:	95 1b       	sub	r25, r21
  e0:	55 0b       	sbc	r21, r21
  e2:	bb 27       	eor	r27, r27
  e4:	aa 27       	eor	r26, r26
  e6:	62 17       	cp	r22, r18
  e8:	73 07       	cpc	r23, r19
  ea:	84 07       	cpc	r24, r20
  ec:	38 f0       	brcs	.+14     	; 0xfc <__divsf3_pse+0x26>
  ee:	9f 5f       	subi	r25, 0xFF	; 255
  f0:	5f 4f       	sbci	r21, 0xFF	; 255
  f2:	22 0f       	add	r18, r18
  f4:	33 1f       	adc	r19, r19
  f6:	44 1f       	adc	r20, r20
  f8:	aa 1f       	adc	r26, r26
  fa:	a9 f3       	breq	.-22     	; 0xe6 <__divsf3_pse+0x10>
  fc:	35 d0       	rcall	.+106    	; 0x168 <__divsf3_pse+0x92>
  fe:	0e 2e       	mov	r0, r30
 100:	3a f0       	brmi	.+14     	; 0x110 <__divsf3_pse+0x3a>
 102:	e0 e8       	ldi	r30, 0x80	; 128
 104:	32 d0       	rcall	.+100    	; 0x16a <__divsf3_pse+0x94>
 106:	91 50       	subi	r25, 0x01	; 1
 108:	50 40       	sbci	r21, 0x00	; 0
 10a:	e6 95       	lsr	r30
 10c:	00 1c       	adc	r0, r0
 10e:	ca f7       	brpl	.-14     	; 0x102 <__divsf3_pse+0x2c>
 110:	2b d0       	rcall	.+86     	; 0x168 <__divsf3_pse+0x92>
 112:	fe 2f       	mov	r31, r30
 114:	29 d0       	rcall	.+82     	; 0x168 <__divsf3_pse+0x92>
 116:	66 0f       	add	r22, r22
 118:	77 1f       	adc	r23, r23
 11a:	88 1f       	adc	r24, r24
 11c:	bb 1f       	adc	r27, r27
 11e:	26 17       	cp	r18, r22
 120:	37 07       	cpc	r19, r23
 122:	48 07       	cpc	r20, r24
 124:	ab 07       	cpc	r26, r27
 126:	b0 e8       	ldi	r27, 0x80	; 128
 128:	09 f0       	breq	.+2      	; 0x12c <__divsf3_pse+0x56>
 12a:	bb 0b       	sbc	r27, r27
 12c:	80 2d       	mov	r24, r0
 12e:	bf 01       	movw	r22, r30
 130:	ff 27       	eor	r31, r31
 132:	93 58       	subi	r25, 0x83	; 131
 134:	5f 4f       	sbci	r21, 0xFF	; 255
 136:	3a f0       	brmi	.+14     	; 0x146 <__divsf3_pse+0x70>
 138:	9e 3f       	cpi	r25, 0xFE	; 254
 13a:	51 05       	cpc	r21, r1
 13c:	78 f0       	brcs	.+30     	; 0x15c <__divsf3_pse+0x86>
 13e:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_inf>
 142:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_szero>
 146:	5f 3f       	cpi	r21, 0xFF	; 255
 148:	e4 f3       	brlt	.-8      	; 0x142 <__divsf3_pse+0x6c>
 14a:	98 3e       	cpi	r25, 0xE8	; 232
 14c:	d4 f3       	brlt	.-12     	; 0x142 <__divsf3_pse+0x6c>
 14e:	86 95       	lsr	r24
 150:	77 95       	ror	r23
 152:	67 95       	ror	r22
 154:	b7 95       	ror	r27
 156:	f7 95       	ror	r31
 158:	9f 5f       	subi	r25, 0xFF	; 255
 15a:	c9 f7       	brne	.-14     	; 0x14e <__divsf3_pse+0x78>
 15c:	88 0f       	add	r24, r24
 15e:	91 1d       	adc	r25, r1
 160:	96 95       	lsr	r25
 162:	87 95       	ror	r24
 164:	97 f9       	bld	r25, 7
 166:	08 95       	ret
 168:	e1 e0       	ldi	r30, 0x01	; 1
 16a:	66 0f       	add	r22, r22
 16c:	77 1f       	adc	r23, r23
 16e:	88 1f       	adc	r24, r24
 170:	bb 1f       	adc	r27, r27
 172:	62 17       	cp	r22, r18
 174:	73 07       	cpc	r23, r19
 176:	84 07       	cpc	r24, r20
 178:	ba 07       	cpc	r27, r26
 17a:	20 f0       	brcs	.+8      	; 0x184 <__divsf3_pse+0xae>
 17c:	62 1b       	sub	r22, r18
 17e:	73 0b       	sbc	r23, r19
 180:	84 0b       	sbc	r24, r20
 182:	ba 0b       	sbc	r27, r26
 184:	ee 1f       	adc	r30, r30
 186:	88 f7       	brcc	.-30     	; 0x16a <__divsf3_pse+0x94>
 188:	e0 95       	com	r30
 18a:	08 95       	ret

Disassembly of section .text:

0000041a <__fixunssfsi>:
 41a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__fp_splitA>
 41e:	88 f0       	brcs	.+34     	; 0x442 <__fixunssfsi+0x28>
 420:	9f 57       	subi	r25, 0x7F	; 127
 422:	98 f0       	brcs	.+38     	; 0x44a <__fixunssfsi+0x30>
 424:	b9 2f       	mov	r27, r25
 426:	99 27       	eor	r25, r25
 428:	b7 51       	subi	r27, 0x17	; 23
 42a:	b0 f0       	brcs	.+44     	; 0x458 <__fixunssfsi+0x3e>
 42c:	e1 f0       	breq	.+56     	; 0x466 <__fixunssfsi+0x4c>
 42e:	66 0f       	add	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	1a f0       	brmi	.+6      	; 0x43e <__fixunssfsi+0x24>
 438:	ba 95       	dec	r27
 43a:	c9 f7       	brne	.-14     	; 0x42e <__fixunssfsi+0x14>
 43c:	14 c0       	rjmp	.+40     	; 0x466 <__fixunssfsi+0x4c>
 43e:	b1 30       	cpi	r27, 0x01	; 1
 440:	91 f0       	breq	.+36     	; 0x466 <__fixunssfsi+0x4c>
 442:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__fp_zero>
 446:	b1 e0       	ldi	r27, 0x01	; 1
 448:	08 95       	ret
 44a:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_zero>
 44e:	67 2f       	mov	r22, r23
 450:	78 2f       	mov	r23, r24
 452:	88 27       	eor	r24, r24
 454:	b8 5f       	subi	r27, 0xF8	; 248
 456:	39 f0       	breq	.+14     	; 0x466 <__fixunssfsi+0x4c>
 458:	b9 3f       	cpi	r27, 0xF9	; 249
 45a:	cc f3       	brlt	.-14     	; 0x44e <__fixunssfsi+0x34>
 45c:	86 95       	lsr	r24
 45e:	77 95       	ror	r23
 460:	67 95       	ror	r22
 462:	b3 95       	inc	r27
 464:	d9 f7       	brne	.-10     	; 0x45c <__fixunssfsi+0x42>
 466:	3e f4       	brtc	.+14     	; 0x476 <__fixunssfsi+0x5c>
 468:	90 95       	com	r25
 46a:	80 95       	com	r24
 46c:	70 95       	com	r23
 46e:	61 95       	neg	r22
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	08 95       	ret

Disassembly of section .text:

0000032e <__floatunsisf>:
 32e:	e8 94       	clt
 330:	09 c0       	rjmp	.+18     	; 0x344 <__floatsisf+0x12>

00000332 <__floatsisf>:
 332:	97 fb       	bst	r25, 7
 334:	3e f4       	brtc	.+14     	; 0x344 <__floatsisf+0x12>
 336:	90 95       	com	r25
 338:	80 95       	com	r24
 33a:	70 95       	com	r23
 33c:	61 95       	neg	r22
 33e:	7f 4f       	sbci	r23, 0xFF	; 255
 340:	8f 4f       	sbci	r24, 0xFF	; 255
 342:	9f 4f       	sbci	r25, 0xFF	; 255
 344:	99 23       	and	r25, r25
 346:	a9 f0       	breq	.+42     	; 0x372 <__floatsisf+0x40>
 348:	f9 2f       	mov	r31, r25
 34a:	96 e9       	ldi	r25, 0x96	; 150
 34c:	bb 27       	eor	r27, r27
 34e:	93 95       	inc	r25
 350:	f6 95       	lsr	r31
 352:	87 95       	ror	r24
 354:	77 95       	ror	r23
 356:	67 95       	ror	r22
 358:	b7 95       	ror	r27
 35a:	f1 11       	cpse	r31, r1
 35c:	f8 cf       	rjmp	.-16     	; 0x34e <__floatsisf+0x1c>
 35e:	fa f4       	brpl	.+62     	; 0x39e <__floatsisf+0x6c>
 360:	bb 0f       	add	r27, r27
 362:	11 f4       	brne	.+4      	; 0x368 <__floatsisf+0x36>
 364:	60 ff       	sbrs	r22, 0
 366:	1b c0       	rjmp	.+54     	; 0x39e <__floatsisf+0x6c>
 368:	6f 5f       	subi	r22, 0xFF	; 255
 36a:	7f 4f       	sbci	r23, 0xFF	; 255
 36c:	8f 4f       	sbci	r24, 0xFF	; 255
 36e:	9f 4f       	sbci	r25, 0xFF	; 255
 370:	16 c0       	rjmp	.+44     	; 0x39e <__floatsisf+0x6c>
 372:	88 23       	and	r24, r24
 374:	11 f0       	breq	.+4      	; 0x37a <__floatsisf+0x48>
 376:	96 e9       	ldi	r25, 0x96	; 150
 378:	11 c0       	rjmp	.+34     	; 0x39c <__floatsisf+0x6a>
 37a:	77 23       	and	r23, r23
 37c:	21 f0       	breq	.+8      	; 0x386 <__floatsisf+0x54>
 37e:	9e e8       	ldi	r25, 0x8E	; 142
 380:	87 2f       	mov	r24, r23
 382:	76 2f       	mov	r23, r22
 384:	05 c0       	rjmp	.+10     	; 0x390 <__floatsisf+0x5e>
 386:	66 23       	and	r22, r22
 388:	71 f0       	breq	.+28     	; 0x3a6 <__floatsisf+0x74>
 38a:	96 e8       	ldi	r25, 0x86	; 134
 38c:	86 2f       	mov	r24, r22
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	2a f0       	brmi	.+10     	; 0x39e <__floatsisf+0x6c>
 394:	9a 95       	dec	r25
 396:	66 0f       	add	r22, r22
 398:	77 1f       	adc	r23, r23
 39a:	88 1f       	adc	r24, r24
 39c:	da f7       	brpl	.-10     	; 0x394 <__floatsisf+0x62>
 39e:	88 0f       	add	r24, r24
 3a0:	96 95       	lsr	r25
 3a2:	87 95       	ror	r24
 3a4:	97 f9       	bld	r25, 7
 3a6:	08 95       	ret

Disassembly of section .text:

000005f8 <__fp_inf>:
 5f8:	97 f9       	bld	r25, 7
 5fa:	9f 67       	ori	r25, 0x7F	; 127
 5fc:	80 e8       	ldi	r24, 0x80	; 128
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	60 e0       	ldi	r22, 0x00	; 0
 602:	08 95       	ret

Disassembly of section .text:

00000622 <__fp_nan>:
 622:	9f ef       	ldi	r25, 0xFF	; 255
 624:	80 ec       	ldi	r24, 0xC0	; 192
 626:	08 95       	ret

Disassembly of section .text:

000005ce <__fp_pscA>:
 5ce:	00 24       	eor	r0, r0
 5d0:	0a 94       	dec	r0
 5d2:	16 16       	cp	r1, r22
 5d4:	17 06       	cpc	r1, r23
 5d6:	18 06       	cpc	r1, r24
 5d8:	09 06       	cpc	r0, r25
 5da:	08 95       	ret

Disassembly of section .text:

000005dc <__fp_pscB>:
 5dc:	00 24       	eor	r0, r0
 5de:	0a 94       	dec	r0
 5e0:	12 16       	cp	r1, r18
 5e2:	13 06       	cpc	r1, r19
 5e4:	14 06       	cpc	r1, r20
 5e6:	05 06       	cpc	r0, r21
 5e8:	08 95       	ret

Disassembly of section .text:

0000056c <__fp_round>:
 56c:	09 2e       	mov	r0, r25
 56e:	03 94       	inc	r0
 570:	00 0c       	add	r0, r0
 572:	11 f4       	brne	.+4      	; 0x578 <__fp_round+0xc>
 574:	88 23       	and	r24, r24
 576:	52 f0       	brmi	.+20     	; 0x58c <__fp_round+0x20>
 578:	bb 0f       	add	r27, r27
 57a:	40 f4       	brcc	.+16     	; 0x58c <__fp_round+0x20>
 57c:	bf 2b       	or	r27, r31
 57e:	11 f4       	brne	.+4      	; 0x584 <__fp_round+0x18>
 580:	60 ff       	sbrs	r22, 0
 582:	04 c0       	rjmp	.+8      	; 0x58c <__fp_round+0x20>
 584:	6f 5f       	subi	r22, 0xFF	; 255
 586:	7f 4f       	sbci	r23, 0xFF	; 255
 588:	8f 4f       	sbci	r24, 0xFF	; 255
 58a:	9f 4f       	sbci	r25, 0xFF	; 255
 58c:	08 95       	ret

Disassembly of section .text:

000004c4 <__fp_split3>:
 4c4:	57 fd       	sbrc	r21, 7
 4c6:	90 58       	subi	r25, 0x80	; 128
 4c8:	44 0f       	add	r20, r20
 4ca:	55 1f       	adc	r21, r21
 4cc:	59 f0       	breq	.+22     	; 0x4e4 <__fp_splitA+0x10>
 4ce:	5f 3f       	cpi	r21, 0xFF	; 255
 4d0:	71 f0       	breq	.+28     	; 0x4ee <__fp_splitA+0x1a>
 4d2:	47 95       	ror	r20

000004d4 <__fp_splitA>:
 4d4:	88 0f       	add	r24, r24
 4d6:	97 fb       	bst	r25, 7
 4d8:	99 1f       	adc	r25, r25
 4da:	61 f0       	breq	.+24     	; 0x4f4 <__fp_splitA+0x20>
 4dc:	9f 3f       	cpi	r25, 0xFF	; 255
 4de:	79 f0       	breq	.+30     	; 0x4fe <__fp_splitA+0x2a>
 4e0:	87 95       	ror	r24
 4e2:	08 95       	ret
 4e4:	12 16       	cp	r1, r18
 4e6:	13 06       	cpc	r1, r19
 4e8:	14 06       	cpc	r1, r20
 4ea:	55 1f       	adc	r21, r21
 4ec:	f2 cf       	rjmp	.-28     	; 0x4d2 <__fp_split3+0xe>
 4ee:	46 95       	lsr	r20
 4f0:	f1 df       	rcall	.-30     	; 0x4d4 <__fp_splitA>
 4f2:	08 c0       	rjmp	.+16     	; 0x504 <__fp_splitA+0x30>
 4f4:	16 16       	cp	r1, r22
 4f6:	17 06       	cpc	r1, r23
 4f8:	18 06       	cpc	r1, r24
 4fa:	99 1f       	adc	r25, r25
 4fc:	f1 cf       	rjmp	.-30     	; 0x4e0 <__fp_splitA+0xc>
 4fe:	86 95       	lsr	r24
 500:	71 05       	cpc	r23, r1
 502:	61 05       	cpc	r22, r1
 504:	08 94       	sec
 506:	08 95       	ret

Disassembly of section .text:

000005ea <__fp_zero>:
 5ea:	e8 94       	clt

000005ec <__fp_szero>:
 5ec:	bb 27       	eor	r27, r27
 5ee:	66 27       	eor	r22, r22
 5f0:	77 27       	eor	r23, r23
 5f2:	cb 01       	movw	r24, r22
 5f4:	97 f9       	bld	r25, 7
 5f6:	08 95       	ret

Disassembly of section .text:

00000614 <__mulsf3>:
 614:	0e 94 c6 00 	call	0x18c	; 0x18c <__mulsf3x>
 618:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_round>

Disassembly of section .text:

0000018c <__mulsf3x>:
 18c:	0f c0       	rjmp	.+30     	; 0x1ac <__mulsf3x+0x20>
 18e:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscA>
 192:	38 f0       	brcs	.+14     	; 0x1a2 <__mulsf3x+0x16>
 194:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscB>
 198:	20 f0       	brcs	.+8      	; 0x1a2 <__mulsf3x+0x16>
 19a:	95 23       	and	r25, r21
 19c:	11 f0       	breq	.+4      	; 0x1a2 <__mulsf3x+0x16>
 19e:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_inf>
 1a2:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_nan>
 1a6:	11 24       	eor	r1, r1
 1a8:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_szero>
 1ac:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fp_split3>
 1b0:	70 f3       	brcs	.-36     	; 0x18e <__mulsf3x+0x2>

000001b2 <__mulsf3_pse>:
 1b2:	95 9f       	mul	r25, r21
 1b4:	c1 f3       	breq	.-16     	; 0x1a6 <__mulsf3x+0x1a>
 1b6:	95 0f       	add	r25, r21
 1b8:	50 e0       	ldi	r21, 0x00	; 0
 1ba:	55 1f       	adc	r21, r21
 1bc:	62 9f       	mul	r22, r18
 1be:	f0 01       	movw	r30, r0
 1c0:	72 9f       	mul	r23, r18
 1c2:	bb 27       	eor	r27, r27
 1c4:	f0 0d       	add	r31, r0
 1c6:	b1 1d       	adc	r27, r1
 1c8:	63 9f       	mul	r22, r19
 1ca:	aa 27       	eor	r26, r26
 1cc:	f0 0d       	add	r31, r0
 1ce:	b1 1d       	adc	r27, r1
 1d0:	aa 1f       	adc	r26, r26
 1d2:	64 9f       	mul	r22, r20
 1d4:	66 27       	eor	r22, r22
 1d6:	b0 0d       	add	r27, r0
 1d8:	a1 1d       	adc	r26, r1
 1da:	66 1f       	adc	r22, r22
 1dc:	82 9f       	mul	r24, r18
 1de:	22 27       	eor	r18, r18
 1e0:	b0 0d       	add	r27, r0
 1e2:	a1 1d       	adc	r26, r1
 1e4:	62 1f       	adc	r22, r18
 1e6:	73 9f       	mul	r23, r19
 1e8:	b0 0d       	add	r27, r0
 1ea:	a1 1d       	adc	r26, r1
 1ec:	62 1f       	adc	r22, r18
 1ee:	83 9f       	mul	r24, r19
 1f0:	a0 0d       	add	r26, r0
 1f2:	61 1d       	adc	r22, r1
 1f4:	22 1f       	adc	r18, r18
 1f6:	74 9f       	mul	r23, r20
 1f8:	33 27       	eor	r19, r19
 1fa:	a0 0d       	add	r26, r0
 1fc:	61 1d       	adc	r22, r1
 1fe:	23 1f       	adc	r18, r19
 200:	84 9f       	mul	r24, r20
 202:	60 0d       	add	r22, r0
 204:	21 1d       	adc	r18, r1
 206:	82 2f       	mov	r24, r18
 208:	76 2f       	mov	r23, r22
 20a:	6a 2f       	mov	r22, r26
 20c:	11 24       	eor	r1, r1
 20e:	9f 57       	subi	r25, 0x7F	; 127
 210:	50 40       	sbci	r21, 0x00	; 0
 212:	9a f0       	brmi	.+38     	; 0x23a <__mulsf3_pse+0x88>
 214:	f1 f0       	breq	.+60     	; 0x252 <__mulsf3_pse+0xa0>
 216:	88 23       	and	r24, r24
 218:	4a f0       	brmi	.+18     	; 0x22c <__mulsf3_pse+0x7a>
 21a:	ee 0f       	add	r30, r30
 21c:	ff 1f       	adc	r31, r31
 21e:	bb 1f       	adc	r27, r27
 220:	66 1f       	adc	r22, r22
 222:	77 1f       	adc	r23, r23
 224:	88 1f       	adc	r24, r24
 226:	91 50       	subi	r25, 0x01	; 1
 228:	50 40       	sbci	r21, 0x00	; 0
 22a:	a9 f7       	brne	.-22     	; 0x216 <__mulsf3_pse+0x64>
 22c:	9e 3f       	cpi	r25, 0xFE	; 254
 22e:	51 05       	cpc	r21, r1
 230:	80 f0       	brcs	.+32     	; 0x252 <__mulsf3_pse+0xa0>
 232:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_inf>
 236:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <__fp_szero>
 23a:	5f 3f       	cpi	r21, 0xFF	; 255
 23c:	e4 f3       	brlt	.-8      	; 0x236 <__mulsf3_pse+0x84>
 23e:	98 3e       	cpi	r25, 0xE8	; 232
 240:	d4 f3       	brlt	.-12     	; 0x236 <__mulsf3_pse+0x84>
 242:	86 95       	lsr	r24
 244:	77 95       	ror	r23
 246:	67 95       	ror	r22
 248:	b7 95       	ror	r27
 24a:	f7 95       	ror	r31
 24c:	e7 95       	ror	r30
 24e:	9f 5f       	subi	r25, 0xFF	; 255
 250:	c1 f7       	brne	.-16     	; 0x242 <__mulsf3_pse+0x90>
 252:	fe 2b       	or	r31, r30
 254:	88 0f       	add	r24, r24
 256:	91 1d       	adc	r25, r1
 258:	96 95       	lsr	r25
 25a:	87 95       	ror	r24
 25c:	97 f9       	bld	r25, 7
 25e:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000630 <_fini>:
 630:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000632 <__funcs_on_exit>:
 632:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000634 <__simulator_exit>:
 634:	08 95       	ret

Disassembly of section .text.exit:

000005aa <exit>:
 5aa:	ec 01       	movw	r28, r24
 5ac:	0e 94 19 03 	call	0x632	; 0x632 <__funcs_on_exit>
 5b0:	0e 94 18 03 	call	0x630	; 0x630 <_fini>
 5b4:	ce 01       	movw	r24, r28
 5b6:	0e 94 1a 03 	call	0x634	; 0x634 <__simulator_exit>
 5ba:	ce 01       	movw	r24, r28
 5bc:	0e 94 16 03 	call	0x62c	; 0x62c <_Exit>

Disassembly of section .text._Exit:

0000062c <_Exit>:
 62c:	0e 94 55 00 	call	0xaa	; 0xaa <_exit>
